// Generated by view binder compiler. Do not edit!
package com.elmohandes.articlesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.elmohandes.articlesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import link.fls.swipestack.SwipeStack;

public final class ActivityListstackBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final RelativeLayout containerNoArticles;

  @NonNull
  public final ImageView imgNoArticle;

  @NonNull
  public final SwipeStack swipestack;

  @NonNull
  public final TextView txtNoArticle;

  private ActivityListstackBinding(@NonNull FrameLayout rootView,
      @NonNull RelativeLayout containerNoArticles, @NonNull ImageView imgNoArticle,
      @NonNull SwipeStack swipestack, @NonNull TextView txtNoArticle) {
    this.rootView = rootView;
    this.containerNoArticles = containerNoArticles;
    this.imgNoArticle = imgNoArticle;
    this.swipestack = swipestack;
    this.txtNoArticle = txtNoArticle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListstackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListstackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_liststack, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListstackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_no_articles;
      RelativeLayout containerNoArticles = ViewBindings.findChildViewById(rootView, id);
      if (containerNoArticles == null) {
        break missingId;
      }

      id = R.id.img_no_article;
      ImageView imgNoArticle = ViewBindings.findChildViewById(rootView, id);
      if (imgNoArticle == null) {
        break missingId;
      }

      id = R.id.swipestack;
      SwipeStack swipestack = ViewBindings.findChildViewById(rootView, id);
      if (swipestack == null) {
        break missingId;
      }

      id = R.id.txt_no_article;
      TextView txtNoArticle = ViewBindings.findChildViewById(rootView, id);
      if (txtNoArticle == null) {
        break missingId;
      }

      return new ActivityListstackBinding((FrameLayout) rootView, containerNoArticles, imgNoArticle,
          swipestack, txtNoArticle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
