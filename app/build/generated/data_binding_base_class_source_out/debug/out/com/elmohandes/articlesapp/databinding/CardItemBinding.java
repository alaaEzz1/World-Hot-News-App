// Generated by view binder compiler. Do not edit!
package com.elmohandes.articlesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.elmohandes.articlesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView articleCard;

  @NonNull
  public final TextView cardDescription;

  @NonNull
  public final ImageView cardImg;

  @NonNull
  public final TextView cardLink;

  @NonNull
  public final ProgressBar cardProgress;

  @NonNull
  public final ImageView cardShare;

  @NonNull
  public final TextView cardTime;

  @NonNull
  public final TextView cardTitle;

  @NonNull
  public final TextView cardWebsitenameTxt;

  @NonNull
  public final RelativeLayout relativeContainer;

  @NonNull
  public final RelativeLayout relativeImg;

  private CardItemBinding(@NonNull CardView rootView, @NonNull CardView articleCard,
      @NonNull TextView cardDescription, @NonNull ImageView cardImg, @NonNull TextView cardLink,
      @NonNull ProgressBar cardProgress, @NonNull ImageView cardShare, @NonNull TextView cardTime,
      @NonNull TextView cardTitle, @NonNull TextView cardWebsitenameTxt,
      @NonNull RelativeLayout relativeContainer, @NonNull RelativeLayout relativeImg) {
    this.rootView = rootView;
    this.articleCard = articleCard;
    this.cardDescription = cardDescription;
    this.cardImg = cardImg;
    this.cardLink = cardLink;
    this.cardProgress = cardProgress;
    this.cardShare = cardShare;
    this.cardTime = cardTime;
    this.cardTitle = cardTitle;
    this.cardWebsitenameTxt = cardWebsitenameTxt;
    this.relativeContainer = relativeContainer;
    this.relativeImg = relativeImg;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView articleCard = (CardView) rootView;

      id = R.id.card_description;
      TextView cardDescription = ViewBindings.findChildViewById(rootView, id);
      if (cardDescription == null) {
        break missingId;
      }

      id = R.id.card_img;
      ImageView cardImg = ViewBindings.findChildViewById(rootView, id);
      if (cardImg == null) {
        break missingId;
      }

      id = R.id.card_link;
      TextView cardLink = ViewBindings.findChildViewById(rootView, id);
      if (cardLink == null) {
        break missingId;
      }

      id = R.id.card_progress;
      ProgressBar cardProgress = ViewBindings.findChildViewById(rootView, id);
      if (cardProgress == null) {
        break missingId;
      }

      id = R.id.card_share;
      ImageView cardShare = ViewBindings.findChildViewById(rootView, id);
      if (cardShare == null) {
        break missingId;
      }

      id = R.id.card_time;
      TextView cardTime = ViewBindings.findChildViewById(rootView, id);
      if (cardTime == null) {
        break missingId;
      }

      id = R.id.card_title;
      TextView cardTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardTitle == null) {
        break missingId;
      }

      id = R.id.card_websitename_txt;
      TextView cardWebsitenameTxt = ViewBindings.findChildViewById(rootView, id);
      if (cardWebsitenameTxt == null) {
        break missingId;
      }

      id = R.id.relative_container;
      RelativeLayout relativeContainer = ViewBindings.findChildViewById(rootView, id);
      if (relativeContainer == null) {
        break missingId;
      }

      id = R.id.relative_img;
      RelativeLayout relativeImg = ViewBindings.findChildViewById(rootView, id);
      if (relativeImg == null) {
        break missingId;
      }

      return new CardItemBinding((CardView) rootView, articleCard, cardDescription, cardImg,
          cardLink, cardProgress, cardShare, cardTime, cardTitle, cardWebsitenameTxt,
          relativeContainer, relativeImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
